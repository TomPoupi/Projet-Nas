GROUPE RÉSEAUX CONFIGURATION PROJET PARTIE 1 :
par tom poupard

( voir le schéma pour avoir la topologie du réseau)

Part1 ipv4 :
--------------------------------------------------------------------------------------------------------------------
--CE1 :
CE1#configure terminal
CE1(config)#interface FastEthernet0/0				
CE1(config-if)#ip address 20.1.11.1 255.255.255.0			// en ipv4 : address + mask de sous réseau 
CE1(config-if)#no shutdown
CE1(config-if)#exit
CE1(config)#exit
CE1#write								// jamais oublier de write

--PE1 :
PE1#configure terminal
PE1(config)#interface FastEthernet0/0				
PE1(config-if)#ip address 20.1.11.11 255.255.255.0
PE1(config-if)#no shutdown
PE1(config-if)#exit
PE1(config)#interface GigabitEthernet1/0				
PE1(config-if)#ip address 10.1.1.11 255.255.255.0
PE1(config-if)#no shutdown
PE1(config)#interface GigabitEthernet2/0				
PE1(config-if)#ip address 10.2.2.11 255.255.255.0
PE1(config-if)#no shutdown
PE1(config-if)#exit
PE1(config)#exit
PE1#show running-config 						//check si tout va bien
PE1#write


//...
//faire pareil pour chaque router du réseau 
--------------------------------------------------------------------------------------------------------------------

Part2 ospf :
--------------------------------------------------------------------------------------------------------------------
// ospf est config entre les router (PE1 PE2 PE3 PE4 R1 R2 R3 R4)
 
--PE1:
PE1#configure terminal
PE1(config)#router ospf 11						// le 11 est le <process-id>, le chiffre importe peu en lui même mais vu qu'on va s'en servir quand on va config les interfaces du coup autant mettre 1 pour R1, 2 pour R2 etc... 
PE1(config-router)#router-id 11.11.11.11				// le 11.11.11.11 est le <router-id>, même délire sauf qu'on va pas plus s'en servir que ça, ça sera juste l'id qu'on vera quand on fera des show ospf neighbor et c'est ce qui utilisé comme id par défault par mpls
PE1(config-router)#exit
PE1(config)#interface GigabitEthernet1/0
PE1(config-if)#ip ospf 11 area 0					//"PE1(config-if)#ospf <process-id> area <area-id>", on peut diviser ton sous réseau en aire, l'aire 0 correspond au backbone et pas plus de 15 router par aire. faire cette config sur chaque interface où tu veux faire de l'ospf
PE1(config-if)#exit
PE1(config)#interface GigabitEthernet2/0
PE1(config-if)#ip ospf 11 area 0					
PE1(config-if)#exit
PE1(config)#exit
PE1#write

--R1:
R1#configure terminal
R1(config)#router ospf 1
R1(config-router)#router-id 1.1.1.1
R1(config-router)#exit
R1(config)#interface GigabitEthernet1/0
R1(config-if)#ip ospf 1 area 0
R1(config)#interface GigabitEthernet2/0
R1(config-if)#ip ospf 1 area 0
R1(config)#interface GigabitEthernet3/0
R1(config-if)#ip ospf 1 area 0
R1(config)#interface GigabitEthernet4/0
R1(config-if)#ip ospf 1 area 0
R1(config-if)#exit
R1(config)#exit
R1#write
R1#show ip ospf neighbor						// connaitre ses neighbors
R1#show ip ospf database						// avoir toutes infos des area des router et leur interfaces qui y sont
R1#show ip ospf database router						// donne des infos sur ton router
R1#show ip route							// montre tous les routes dispo 

//...
//faire pareil pour les router (PE2 PE3 PE4 R2 R3 R4)
--------------------------------------------------------------------------------------------------------------------

Part2,5 interface de loopback:
--------------------------------------------------------------------------------------------------------------------
//Étape obligatoire si tu veux utiliser mpls sur cette config il faut au bout des router de chaque AS (les PE) config une interface de loopback et le mettre dans l'ospf
//Après c'est mieux de le faire sur tout les routers de ton réseaux c'est ce que j'ai fait

--PE1:
PE1#configure terminal
PE1(config)#interface Loopback1 					// ça créer et up directement une interface virtuelle (loopback) du router
PE1(config-if)#ip address 11.11.11.11 255.255.255.255
PE1(config-if)#ip ospf 11 area 0					// enable interface à ospf dans l'aire 0
PE1(config-if)#exit
PE1(config)#exit
PE1#write

//...
//faire pareil pour tous les routers de ton réseaux
--------------------------------------------------------------------------------------------------------------------

Part3 mpls/ldp :
--------------------------------------------------------------------------------------------------------------------
// mpls est config entre les router (R1 PE1 R2 PE2 R3 PE3 R4 PE4)
// mpls permet de créer des labels et du coup setup plus rapidement mon routeur à chaque changement de topologie 
// routers ont besoin qu'un seul label envoyer un packet vers un autre router 

// pour les routers de coeur :
--R1:
R1#configure terminal
R1(config)#mpls ip							//enable mpls sur le router
R1(config)#mpls label protocol ldp					//enable le protocole ldp avec mpls
R1(config)#mpls ldp router-id Loopback1					// ici on doit mettre qu'on veut faire mpls/ldp sur mon interface de loopback que ça passe par cette interface pour transmettre mon label			
R1(config)#interface GigabitEthernet1/0					// activer mpls sur chaque interface
R1(config-if)#mpls ip
R1(config-if)#exit
R1(config)#interface GigabitEthernet2/0
R1(config-if)#mpls ip
R1(config-if)#exit
R1(config)#interface GigabitEthernet3/0
R1(config-if)#mpls ip
R1(config-if)#exit
R1(config)#interface GigabitEthernet4/0
R1(config-if)#mpls ip
R1(config-if)#exit
R1(config)#exit
//...
// (faire pareil pour R2,R3,R4)


// pour les router de bordure :
--PE1:
PE1#configure terminal
PE1(config)#mpls ip							
PE1(config)#mpls label protocol ldp					
PE1(config)#mpls ldp router-id Loopback1				// ici on doit mettre qu'on veut faire mpls/ldp sur mon interface de loopback que ça passe par cette interface pour transmettre mon label
PE1(config)#interface GigabitEthernet1/0				
PE1(config-if)#mpls ip
PE1(config-if)#exit
PE1(config)#interface GigabitEthernet2/0
PE1(config-if)#mpls ip
PE1(config-if)#exit
PE1(config)#exit
PE1#write
PE1#show mpls interfaces
PE1#show mpls ldp discovery
PE1#show mpls ldp neighbor
PE1#show mpls forwarding
PE1#write
// faire pareil pour (PE4)


--------------------------------------------------------------------------------------------------------------------


Part4 BGP :
--------------------------------------------------------------------------------------------------------------------
//on va config BGP sur CE1,PE1,PE4,CE4

// l'idée est qu'on va essayer de ping CE1 à CE4 sans que CE1 et CE4 puisse connaitre le réseau de coeur de l'AS 110, 
// l'idée n°2 : il faut pas que CE1 et CE4 connaissent le réseaux de coeur et inversersement seul les PE ont ces informations 
// en gros on va essayer de connecter en bgp :  CE1-PE1 en eBGP | PE1-PE4 en iBGP | PE4-CE4 en eBGP 
// le eBGP entre CEi et PEi est la méthode classique
// le iBGP on va essayer de faire connecter PE1 et PE4 à partir des addresses de loopback ce qui est bcq plus simple qu'avec des interfaces physique

//les PEs

--PE1:
PE1#configure terminal
PE1(config)#router bgp 110						// AS 110 des routeurs de coeur ( avec PE1 et PE4 )
PE1(config-router)#bgp router-id 11.11.11.11				// mon router-id en bgp c'est ce qu'on va voir si on fait des show 
PE1(config-router)#neighbor 20.1.11.1 remote-as 111			// eBGP avec CE1 mon neighbor est CE1 avec son address ip 20.1.11.1 dans son AS 111
PE1(config-router)#neighbor 44.44.44.44 remote-as 110			// iBGP avec PE4 on va déclarer comme neighbor l'address de loopback de PE4
PE1(config-router)#neighbor 44.44.44.44 update source loopback1		// pour qu'on puisse pinger l'address de loopback de PE4 il faut aussi déclarer que je dois utiliser mon address de loopback la : 11.11.11.11/32
PE1(config-router)#neighbor 44.44.44.44 next-hop-seft			// cette commande permet de faire en sorte que tous les packets passant par 44.44.44.44 passent par mon router pour pinger mon CE1 ( sans ça PE4 et CE4 ne sait pas comment router à CE1)
PE1(config-router)#address-family ipv4 unicast
PE1(config-router-af)#neighbor 20.1.11.1 activate			// j'active mes liens
PE1(config-router-af)#neighbor 44.44.44.44 activate			//... same
PE1(config-router-af)#network 20.1.11.0 mask 255.255.255.0		// enfin je déclare mon network pour que PE4 et CE4 puisse pinger le réseaux 20.1.11.0/24
PE1(config-router-af)#exit
PE1(config-router)#exit
PE1(config)#exit
PE1#write

//...
// faire pareil pour PE4


//les CEs

--CE1:
CE1#configure terminal
CE1(config)#router bgp 111
CE1(config-router)#bgp router-id 1.0.0.1
CE1(config-router)#neighbor 20.1.11.11 remote-as 110
CE1(config-router)#address-family ipv4 unicast
CE1(config-router-af)#neighbor 20.1.11.11 activate
CE1(config-router-af)#network 1.0.0.1 mask 255.255.255.255		// pas necessaire mais tjrs utile
CE1(config-router-af)#exit
CE1(config-router)#exit
CE1(config)#exit
CE1#write

//...
// faire pareil pour CE4
--------------------------------------------------------------------------------------------------------------------